---
import SectionTitle from "../common/section-title.astro";
import ProjectCard from "./project-card.astro";
import { Icon } from "astro-icon/components";
import { infos } from "../../data/infos.js";
import type { Tech } from "./tech-stack.astro";

const baseUrl = infos.host;

/**
 * ? STEP 1: Define allowed project types
 * These are the only valid "type" values a project can have.
 * It ensures we only process projects with one of these labels.
 */
const allowedTypes = ["BackEnd Project", "FrontEnd Project", "FullStack Project", "Client Project", "Open-Source Contribution", "Capstone Project"] as const;

type AllowedProjectType = (typeof allowedTypes)[number];

/**
 * ? STEP 2: Define valid tech stack names
 * ! These must match exactly with what's defined in the TECHS object from tech-stack.astro.
 * This ensures only recognized technologies are displayed in badges.
 */
const validTechs = ["NextJs", "Supabase", "TailwindCSS", "Bootstrap", "React", "Vite", "OOP", "Astro", "TypeScript", "Drizzle", "JavaScript", "PostgreSQL", "SQLite", "NextAuth.js", "Sorting Algorithms", "Framer Motion", "Vanilla", "SocketIO", "Laravel", "PHP", "Symfony", "FilamentPHP", "MySQL", "Git", "GitHub", "API", "REST", "MVC", "JWT", "AI", "Android", "Java"] as const;

/**
 * ? STEP 3: Project type definition
 * A strongly-typed structure representing one project.
 */
type Project = {
  type: AllowedProjectType;
  title: string;
  stack: Tech[]; // only use techs from validTechs
  description: string;
  deploy: string;
  repository: string;
  image: string;
  alt: string;
};

/**
 * ? STEP 4: Fetch data from Google Sheets (via Apps Script)
 * The Apps Script returns JSON data from your sheet.
 * Data is published on Google Sheets using an Apps Script and returned in JSON format
 */
const res = await fetch("https://script.google.com/macros/s/AKfycbznRbSRlbdYjV7YcyU69xllROJfvesitII2VAT_O4Q0DYp_wlk2QHcy0iBNm5H_pkBjyQ/exec");
const rawProjects = await res.json();

/**
 * ? STEP 5: Process and validate the fetched data
 * - Only allow projects with valid types
 * - Clean and validate the tech stack array
 * - Auto-correct relative image paths using baseUrl
 */
const projects: Project[] = rawProjects
  .filter((proj: any) => allowedTypes.includes(proj.type)) // skip invalid types
  .map((proj: any) => ({
    type: proj.type as AllowedProjectType,
    title: proj.title,
    stack: proj.stack
      .split(",") // "PHP, Laravel, TailwindCSS ..."
      .map((s: string) => s.trim()) // remove extra spaces
      .filter((s: string): s is Tech => validTechs.includes(s as Tech)), // only include valid techs
    description: proj.description,
    deploy: proj.deploy,
    repository: proj.repository,
    image: proj.image.startsWith("http") ? proj.image : `${baseUrl}${proj.image}`, // fix image path
    alt: proj.alt,
  }));
---

<!-- ! ========================== --><!-- SECTION: Development Projects --><!-- ========================== -->
<section id="projects" class="mx-auto mt-28 flex max-w-screen-md flex-col items-center gap-5 px-4 pt-4">
  <!-- ? Section header and intro text -->
  <SectionTitle>Development Projects</SectionTitle>
  <p class="max-w-[500px] text-center text-neutral-400">Dive into a showcase of my development projects, each a testament to my skills, creativity, and dedication to development.</p>

  <!-- ? List of project cards (from fetched & filtered sheet data) -->
  <div class="mt-3 flex flex-col gap-8">
    {projects.map((project, index) => <ProjectCard type={project.type} title={project.title} stack={project.stack} description={project.description} deploy={project.deploy} repository={project.repository} image={project.image} alt={project.alt} className={`intersect:slide-in-from-${index % 2 === 0 ? "left" : "right"}-12`} />)}
  </div>

  <!-- ? View more projects button -->
  <div class="mt-12 w-full text-center">
    <a href={infos.moreprojects} target="_blank" rel="noopener noreferrer" class="mx-auto inline-flex items-center justify-center gap-2 rounded-lg bg-gradient-to-r from-sky-400 via-cyan-500 to-blue-600 px-6 py-3 text-center font-jetbrains font-bold text-white transition-all duration-200 hover:brightness-110 hover:scale-105 hover:shadow-lg hover:shadow-sky-400/25 focus:outline-none focus:ring-2 focus:ring-sky-400 focus:ring-offset-2 focus:ring-offset-gray-900">
      viewMoreProjects();
      <Icon name="ic:baseline-open-in-new" class="text-xl" />
    </a>
  </div>
</section>
