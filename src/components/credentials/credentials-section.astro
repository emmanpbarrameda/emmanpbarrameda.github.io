---
import SectionTitle from "../common/section-title.astro";
import CredentialItem from "./credential-item.astro";
import { experience, leadership, achievements, speakerships, engagements, communities } from "./credentials_data.js";

const tabs = [
  { key: "experience", label: "Corporate", data: experience },
  { key: "leadership", label: "Leadership", data: leadership },
  { key: "achievements", label: "Achievements", data: achievements },
  { key: "speakerships", label: "Talks", data: speakerships },
  { key: "engagements", label: "Engagements", data: engagements },
  { key: "communities", label: "Communities", data: communities }
];

const DEFAULT_LIMIT = 5;
---

<section id="credentials" class="mx-auto mt-28 max-w-screen-md px-4 pt-4">
  <div class="flex flex-col items-center gap-5 text-center">
    <SectionTitle>Credentials</SectionTitle>
    <p class="mb-6 mx-auto max-w-[520px] text-pretty text-neutral-400"> A summary view of my professional and leadership journey. </p>
  </div>

  <!-- scroll tabs -->
  <div class="relative -mx-4 mb-4 px-4">
    <div class="tabs-scroll relative overflow-x-auto scroll-smooth no-scrollbar">
      <nav class="flex w-max gap-2 py-2 pr-2 snap-x">
        {
          tabs.map((t, i) => (
            <button type="button" class="tab-btn snap-start rounded-md border border-neutral-800/70 px-4 py-2 text-base text-center transition hover:border-neutral-700 data-[active='true']:bg-sky-500/15 data-[active='true']:text-sky-300" data-key={t.key} data-active={i === 0 ? "true" : "false"}>
              {t.label}
            </button>
          ))
        }
      </nav>

      <!-- left/right fade masks (hidden @ mobile) -->
      <div class="pointer-events-none absolute inset-y-0 left-0 w-6 bg-gradient-to-r from-neutral-950 to-transparent hidden sm:block"></div>
      <div class="pointer-events-none absolute inset-y-0 right-0 w-6 bg-gradient-to-l from-neutral-950 to-transparent hidden sm:block"></div>
    </div>
  </div>

  {
    tabs.map((t, i) => (
      <div class="tab-panel" data-key={t.key} data-active={i === 0 ? "true" : "false"}>
        <ul class="flex flex-col gap-3">
          {t.data.slice(0, DEFAULT_LIMIT).map((item) => (
            <CredentialItem {...item} />
          ))}
        </ul>

        {t.data.length > DEFAULT_LIMIT && (
          <details class="group mt-4">
            <summary class="cursor-pointer list-none rounded-md border border-neutral-800/70 px-4 py-2 text-sm text-neutral-300 hover:border-neutral-700 hover:bg-neutral-900/60 text-center">Show more</summary>

            <ul class="mt-3 flex flex-col gap-3">
              {t.data.slice(DEFAULT_LIMIT).map((item) => (
                <CredentialItem {...item} />
              ))}
            </ul>

            <button type="button" class="show-less mt-4 w-full rounded-md border border-neutral-800/70 px-4 py-2 text-sm text-neutral-300 hover:border-neutral-700 hover:bg-neutral-900/60">
              Show less
            </button>
          </details>
        )}
      </div>
    ))
  }

  <script is:inline>
    // Tabs
    const tabBtns = document.querySelectorAll(".tab-btn");
    const panels = document.querySelectorAll(".tab-panel");

    function activateTab(btn) {
      const key = btn.dataset.key;
      tabBtns.forEach((b) => (b.dataset.active = "false"));
      btn.dataset.active = "true";
      panels.forEach((p) => (p.dataset.active = p.dataset.key === key ? "true" : "false"));
      btn.scrollIntoView({ behavior: "smooth", inline: "center", block: "nearest" });
    }

    tabBtns.forEach((btn) => {
      btn.addEventListener("click", () => activateTab(btn));
      btn.addEventListener("keydown", (e) => {
        if (e.key === "ArrowRight" || e.key === "ArrowLeft") {
          e.preventDefault();
          const arr = Array.from(tabBtns);
          const i = arr.indexOf(btn);
          const next = e.key === "ArrowRight" ? arr[(i + 1) % arr.length] : arr[(i - 1 + arr.length) % arr.length];
          next.focus();
          activateTab(next);
        }
      });
    });

    // Show less
    function scrollToCredentials() {
      const section = document.getElementById("credentials");
      if (!section) return;
      section.scrollIntoView({ behavior: "smooth", block: "start" });
    }

    function wireShowLess() {
      document.querySelectorAll("details.group .show-less").forEach((btn) => {
        btn.addEventListener("click", () => {
          const det = btn.closest("details");
          if (det) {
            det.removeAttribute("open");
            requestAnimationFrame(() => {
              requestAnimationFrame(scrollToCredentials);
            });
          }
        });
      });
    }
    wireShowLess();
    document.addEventListener("astro:after-swap", wireShowLess);
  </script>

  <style is:global>
    .tab-panel {
      display: none;
    }
    .tab-panel[data-active="true"] {
      display: block;
    }

    details[open] > summary {
      display: none;
    }

    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }
    .no-scrollbar {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    #credentials {
      scroll-margin-top: 5rem;
    }
  </style>
</section>
